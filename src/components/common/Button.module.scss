@use '@/styles/variables' as vars;
@use '@/styles/mixins' as mixins;

/*-------------------------------------------------* 
//* Base (consomme des variables CSS)
 - Les variants définissent les tokens (--btn-*) ci-dessous
 - ⚠️ Aucun "look" final ici : juste la structure + états génériques
/*-------------------------------------------------*/
.button {
  /* Tokens par défaut (serviront de fallback si pas de variante) */
  --btn-fg: #{vars.$color-coldgrey-1};

  // Structure commune:
  position: relative;
  min-width: 44px; // Cible tactile
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: vars.$color-coldgrey-4;
  font-weight: 500;
  text-shadow: 0px -1px 1px vars.$color-coldgrey-12;
  white-space: nowrap;
  border: 1px solid vars.$color-coldgrey-12;
  border-radius: 32px;
  background: linear-gradient(
    to top,
    vars.$color-coldgrey-9 0%,
    vars.$color-coldgrey-7 80%,
    vars.$color-coldgrey-8 100%
  );
  box-shadow: 0 4px 3px vars.$color-coldgrey-8, 0 6px 8px vars.$color-coldgrey-9,
    0 -4px 4px vars.$color-coldgrey-9, 0 -6px 4px vars.$color-coldgrey-8,
    inset 0 0 3px vars.$color-coldgrey-9;
  cursor: pointer;
  user-select: none;

  /* Cible UNIQUEMENT le contenu (cf. <span className={styles.content}> dans Button.tsx */
  .content {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.2s ease;
  }

  /* Effets "motion-safe" : animés seulement si l’utilisateur n’a PAS demandé
     de réduire les animations dans son OS (accessibilité + perf) */
  @media (prefers-reduced-motion: no-preference) {
    transition: background-color 0.2s ease, color 0.2s ease,
      border-color 0.2s ease, box-shadow 0.2s ease, transform 0.06s ease;
  }
  /* Hover seulement si l’appareil supporte le survol (desktop).
     Évite les états collants sur mobile (UX) */
  @media (hover: hover) {
    &:hover {
      color: vars.$color-coldgrey-2;
      box-shadow: 0 4px 3px vars.$color-coldgrey-8,
        0 6px 8px vars.$color-coldgrey-9, 0 -4px 4px vars.$color-coldgrey-9,
        0 -6px 4px vars.$color-coldgrey-8,
        inset 0 0 3px 3px vars.$color-coldgrey-9;
    }
  }
  /* Actif : léger enfoncement (feedback tactile) */
  &:active {
    background: linear-gradient(
      to top,
      vars.$color-coldgrey-10 0%,
      vars.$color-coldgrey-8 80%,
      vars.$color-coldgrey-9 100%
    );
    box-shadow: 0 4px 3px vars.$color-coldgrey-8,
      0 6px 8px vars.$color-coldgrey-9, 0 -4px 4px vars.$color-coldgrey-9,
      0 -6px 4px vars.$color-coldgrey-8,
      inset 0 0 5px 3px vars.$color-coldgrey-11,
      inset 0 0 30px vars.$color-coldgrey-11;
  }
  /* Focus clavier visible (a11y) */
  &:focus-visible {
    outline: 2px solid vars.$color-coldgrey-2;
    outline-offset: 2px;
  }
  /* États désactivés (boutons & liens)
     - :disabled => vrai <button disabled>
     - [aria-disabled="true"] => <a> “désactivé” annoncé aux lecteurs d’écran
     - On NE met PAS pointer-events:none pour conserver le focus clavier */
  &:disabled,
  &[aria-disabled='true'] {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

/*-------------------------------------------------* 
//* Sizes 
/*-------------------------------------------------*/
.s_sm {
}
.s_md {
  min-height: 44px;
  padding: 15px;
}
.s_lg {
}
.s_xl {
}

.fullWidth {
}

/*-------------------------------------------------* 
//* Variant: NAV (panneau BurgerMenu)
 - Full width en petit mobile
 - Largeur fixe après 498px (par défaut 250px pour respecter ton essai)
 - Dégradé "to top" + pile d'ombres + hover/active
 - Gradient text au hover (sur .content)
 /*-------------------------------------------------*/
.v_nav {
  width: 250px;
}
