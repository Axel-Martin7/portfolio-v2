/*
 * Root Layout:
 - Bloc export const metadata : Dans l'app Router, metadata est une API de Next.js : Next fusuinne ces metas au bon endroit dans le <head>,
 On centralise le titre et la description globale ici, puis dans chaque page.tsx on utilise generateMetadata() pour overrider ou spécifier métadonnées
 propres à chaques route (SEO pointu).
 - Déclaration unique de <html> et <body> : App router fusionne automatiquement ces balises de tous les layouts imbriqués, les layouts enfants ne doivent 
 jamais redéfinir <html>/<body> à moins d'ajouter ou modifier un attribut spécifique (par ex: lang={locale}), et seuelement pour ces attributs.
 */

import type { ReactNode } from 'react';
import type { Metadata } from 'next';
import '@/styles/globals.scss';
// import { Geist, Geist_Mono } from 'next/font/google';

// const geistSans = Geist({
//   variable: '--font-geist-sans',
//   subsets: ['latin'],
// });

// const geistMono = Geist_Mono({
//   variable: '--font-geist-mono',
//   subsets: ['latin'],
// });

//*---------------- 1) Déclaration centralisée des métadonnées :
export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
  // on peut ajouter ici openGraph, alternates, icons ...
};

//*---------------- 2) Le layout racine définit UNE seule fois <html> et <body>
interface RootLayoutProps {
  children: ReactNode;
}

export default function RootLayout({ children }: RootLayoutProps) {
  return (
    <html lang="fr">
      <body>{children}</body>
    </html>
  );
}
